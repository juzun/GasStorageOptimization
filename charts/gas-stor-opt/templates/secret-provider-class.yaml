{{- if .Values.secretProviderClassEnabled }}
# This is a SecretProviderClass example using user-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ .Values.appName }}-secret-provider-class
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
    {{- if .Values.AdditionalLabelEnable }}
    {{- toYaml .Values.AdditionalLabels | nindent 4 }}
    {{- end }}
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: {{ .Values.userAssignedIdentityID }}
    keyvaultName: {{ .Values.keyvaultName }}
    cloudName: ""
    objects:  |
      array:
          {{- toYaml .Values.secretProviderObjects | nindent 8 }}

    tenantId: {{ .Values.tenantId }}


  {{- if .Values.secretEnabled }}
  # The new Kubernetes secret to create
  secretObjects:
    # Name of the new Kubernetes secret
    - secretName: {{ .Values.appName }}-secret
      type: Opaque
      data:
      {{- toYaml .Values.secretObjects | nindent 6 }}
  {{- end }}    

{{- end }}
